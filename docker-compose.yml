version: '3'
services:
  shinobi-sql:
    image: mysql:5.7
    volumes:
      - $HOME/ShinobiSQL:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=ccio
      - MYSQL_USER=majesticflame
      - MYSQL_PASSWORD=1234
    restart: unless-stopped
    networks:
      - shinobi-net

  shinobi:
    build:
      context: .
      args:
        SHINOBI_BRANCH: dev
    container_name: shinobi
    volumes:
      - /dev/shm/ShinobiRAM:/dev/shm/streams
      - $HOME/Shinobi:/home/Shinobi
    ports:
      - "8080:8080"
    environment:
      - HOME=/home/Shinobi
      - DB_HOST=shinobi-sql
      - DB_USER=majesticflame
      - DB_PASSWORD=1234
      - DB_DATABASE=ccio
      - SHINOBI_UPDATE=false
    restart: unless-stopped
    networks:
      - shinobi-net

  cleaner:
    build: ./cleaner
    container_name: cleaner
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
    entrypoint: ["/bin/bash", "/entrypoint.sh"]

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    depends_on:
      - shinobi
      - certbot
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - shinobi-net
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
    entrypoint: >
      sh -c "certbot certonly --standalone --non-interactive --agree-tos --register-unsafely-without-email -d ${DOMAIN} || echo 'Certbot failed or cert already exists'"
    networks:
      - shinobi-net

volumes:
  certbot-etc:

networks:
  shinobi-net:
    driver: bridge
